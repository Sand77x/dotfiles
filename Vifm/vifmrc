" vim: filetype=vifm :
" TODO:
" - bookmarks instead of marks
" - set pptx default
" - rename binds
" - dotfile filter binds
" - move and copy binds?

" ------------------------------------------------------------------------------
" Main settings
" ------------------------------------------------------------------------------

set vicmd=nvim
set syscalls
set shell="C:/Program\ Files/Git/bin/bash.exe"

" Trash Directory
set trash
" set trashdir

set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,
            \phistory,fhistory,dirstack,registers,bookmarks,bmarks

" This is how many directories to store in the directory history.
set history=100

" Automatically resolve symbolic links on l or Enter.
set nofollowlinks

" Natural sort of (version) numbers within text.
set sortnumbers

" Maximum number of changes that can be undone.
set undolevels=100

" Use Vim's format of help file (has highlighting and "hyperlinks").
" If you would rather use a plain text help file set novimhelp.
set vimhelp

" If you would like to run an executable file when you
" press Enter, l or Right Arrow, set this.
" set norunexec
set runexec

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.
set timefmt='%d-%m-%y %H:%M'

" Show list of matches on tab completion in command-line mode
set wildmenu
set wildstyle=popup
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

set ignorecase
set smartcase

set nohlsearch
set incsearch
set scrolloff=8

" Set custom status line look
" set statusline="  %-50g %15s %20d  "
set statusline="  %f%= %10u%-7g %20{&sort} %15s %20d  "

" List of color schemes to try (picks the first one supported by the terminal)
colorscheme Custom Default-256 Default

" Use ripgrep instead of grep
set grepprg='rg --line-number %i %a %s'

" Show vertical border
" set fillchars=vborder:ƒ..

" ------------------------------------------------------------------------------
" Bookmarks
" ------------------------------------------------------------------------------

" :mark mark /full/directory/path [filename]

delbmarks!
bmark! C:/mingwlibs/            mingwlibs 
bmark! C:/Program\ Files/       progfiles 
bmark! ~/AppData/               appdata
bmark! ~/scoop/                 scoop 
bmark! ~/Downloads/             downloads 
bmark! ~/Documents/             documents
bmark! ~/Documents/projects/    projects
bmark! ~/Onedrive/schoolfolder/ schoolfolder
bmark! ~/.dotfiles/             dotfiles


" ------------------------------------------------------------------------------
" Commands
" ------------------------------------------------------------------------------

" :com[mand][!] command_name action
"
" These are some of the macros that can be used in the action part:
"  %a for user arguments
"  %c for current file under the cursor
"  %C for current file under the cursor of inactive pane
"  %f for selected file(s)
"  %F for selected file(s) of inactive pane
"  %b is the same as %f %F
"  %d for current directory name
"  %D for current directory name of inactive pane
"  %r{x} for list of files in register {x}
"  %m runs the command in a menu window
"  %u uses command's output to build a file list
"  see `:help vifm-macros` and `:help vifm-filename-modifiers` for more

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip 7z a %c.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep vim "+grep %a"
command! reload :write | restart full

" ------------------------------------------------------------------------------
" File types association
" ------------------------------------------------------------------------------

" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
"
" The first entry is the default program to be used with a matching file.
" The other programs for the file type can be accessed via :file command.
" The command macros like %f, %F, %d, %D may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.
" Spaces in an app name must be escaped, for example: QuickTime\ Player.app
" %PARAM value is the first line of the matched file, example: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.  There is also %FOREGROUND, which is useful for entering passwords.

" zip archives
filetype {*.zip,*.jar,*.war,*.ear,*.oxt,*.apkg},
        \<application/zip,application/java-archive>
       \ {Mount with fuse-zip}
       \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
       \ {View contents}
       \ unzip -l %f | less,
       \ {Extract here}
       \ unzip %c,
fileviewer *.zip,*.jar,*.war,*.ear,*.oxt unzip -l %f

" 7z archives
filetype {*.zip,*.7z,*.rar},<application/x-7z-compressed>
       \ {Mount with fuse-7z}
       \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
fileviewer {*.7z},<application/x-7z-compressed> 7z l %c

" video
fileviewer {*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
           \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
           \*.as[fx],*.unknown_video},
          \<video/*>
         \ ffprobe -hide_banner -pretty %c 2>&1

" pdf
fileviewer {*.pdf},<application/pdf> pdftotext -nopgbrk %c -

" default program for these filetypes
filetype {*.png,*.jpg,*.jpeg,*.webp,*.jfif,*.pdf,*.docs,*.pptx,*.docx,*.mp4,*.mp3,*.mkv} explorer %f &

" ------------------------------------------------------------------------------
" Sample keyboard mappings
" ------------------------------------------------------------------------------

" leader key
nnoremap <space> <nop>

" Display sorting dialog
nnoremap s :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Yank current directory path to Windows clipboard with forward slashes
nnoremap yp :!echo %"d:gs!\!/! %i | clip<cr>
" Yank path to current file to Windows clipboard with forward slashes
nnoremap yf :!echo %"c:gs!\!/! %i | clip<cr>

" create file
nnoremap a :touch<space>
nnoremap A :mkdir<space>

" Mappings for faster renaming
nnoremap r cw
nnoremap R cW

" filtering
nnoremap f :filter<space>
nnoremap F :filter!<space>

" move and copy
nnoremap <space>m :move<cr>
vnoremap <space>m :move<cr>
nnoremap <space>y :copy<cr>
vnoremap <space>y :copy<cr>

" Open editor to edit vifmrc and apply settings after returning to vifm
command! CFG :write | edit $MYVIFMRC | restart full<cr>

" Copy panes
nnoremap yt :sync<cr>

" Swap panes
nnoremap <c-f> <c-w>x
nnoremap <c-u> <c-u>

" Swap between panes
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l

" quick open bookmark list
nnoremap <c-b> :bmarks<cr>/

" Filter-out build and temporary files
command! fb :filter {*.lo,*.o,*.obj,*.d,*.class,*.pyc,*.pyo,.*~}

" hidui
nnoremap <c-e> :hideui<cr>

" fzf
command! fzf :execute 'goto' fnameescape(term('fzf'))
